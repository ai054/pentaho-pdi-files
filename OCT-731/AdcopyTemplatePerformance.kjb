<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>AdcopyTemplatePerformance</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/02/20 10:05:11.890</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/02/20 10:05:11.890</modified_date>
  <parameters>
    <parameter>
      <name>HOST</name>
      <default_value/>
      <description/>
    </parameter>
    <parameter>
      <name>account</name>
      <default_value/>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>hadoop</name>
    <server>${HOST}</server>
    <type>HIVE2</type>
    <access>Native</access>
    <database>feeds</database>
    <port>10000</port>
    <username>hive</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79ce10d69bb9df</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>10000</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>48</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>OrderAnalyticsBase</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}/CreateOrderAnalytics.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
        <parameter>
          <name>account</name>
          <stream_name/>
          <value>${account}</value>
        </parameter>
        <parameter>
          <name>HOST</name>
          <stream_name/>
          <value>${HOST}</value>
        </parameter>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>256</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Acq</name>
      <description/>
      <type>SQL</type>
      <sql>create table order_analytics1 as select a.*,campaign_id,adgroup_id,ad_id,source,medium from order_profit a left join analytics b on a.order_id=b.transaction_id;

create table channelKPI2 as select temp_id,calendar_date,sum(kw_clicks) clicks,sum(kw_conv) conv,sum(kw_imp) imps, 
(sum(kw_clicks)/sum(kw_imp))*100 as ctr,
sum(kw_conv)/sum(kw_clicks) as conv_rate,
sum(kw_clicks*(kw_cpc/1000000))/sum(kw_clicks) as avg_cpc,
sum(kw_clicks*(kw_cpc/1000000)) as mktgspend
from adperformance_google${account} a
join adcopy_template${account} b on a.adcopy_id=b.ad_id
group by temp_id,calendar_date;

 create table channelAnalyticsKPI2 as select temp_id,trans_date,sum(revenue) as revenue,sum(profit) as profit,sum(if(rank=1,1,0)) as TotalAcqOrder,
 sum(if (rank &lt;&gt; 1,1,0)) as TotalRetOrder from order_analytics1 a
 join adcopy_template${account} b on a.ad_id=b.ad_id
group by temp_id,trans_date;

create table ltv1 as select temp_id,month(trans_date) as month, year(trans_date) as year , avg(ltv) as ltv from order_analytics1 a
join retention_input${account} b on a.customer_id=b.customer_id and month(a.trans_date)=month(b.start_date) and year(trans_date)=year(start_date)
join adcopy_template${account} c on a.ad_id=c.ad_id
group by temp_id,month(trans_date),year(trans_date);</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>hadoop</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>AcquisitionPush</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}/PushAcqTemplateToMongo.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
        <parameter>
          <name>account</name>
          <stream_name/>
          <value>${account}</value>
        </parameter>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>704</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Success</name>
      <description/>
      <type>SUCCESS</type>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>928</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>SQL 2</name>
      <description/>
      <type>SQL</type>
      <sql>drop table if exists order_analytics1;
drop table if exists analytics;
drop table if exists channelkpi1;
drop table if exists channel_analyticskpi2;
drop table if exists ltv1;
drop table if exists order_profit;
drop table if exists channelkpi2;
drop table if exists channelAnalyticsKPI2;
drop table if exists retentionsummary_month;
drop table if exists retentionOrderkpi1;
drop table if exists returningOrders1;
drop table if exists ordered_cust2;
drop table if exists orderedCust_deltaltv1;
drop table if exists retentionsummary_month;
drop table if exists mktgspend;
drop table if exists cost1;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>hadoop</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>160</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>Ret</name>
      <description/>
      <type>SQL</type>
      <sql>create table retentionOrderkpi1  as 
select cc.temp_id,cc.trans_date, sum(revenue) revenue,sum(profit) profit,sum(retOrder) retOrder,sum(NumUniqueCustomer) totaluniquecustomer from
(select temp_id,trans_date,sum(revenue) as revenue,sum(profit) as profit,count(distinct customer_id) as NumUniqueCustomer from order_analytics1 a  
join adcopy_template${account} b on a.ad_id=b.ad_id
where rank &lt;&gt; 1 and campaign_id is not null and campaign_id &lt;&gt; '(not set)'
group by temp_id,trans_date) cc 
join (select temp_id,trans_date,sum(if(rank=1,1,0)) as acqOrder,sum(if(rank &lt;&gt;1,1,0)) as retOrder from order_analytics1 a
join adcopy_template${account} b on a.ad_id=b.ad_id
group by temp_id,trans_date) oc on cc.temp_id=oc.temp_id and cc.trans_date=oc.trans_date
group by cc.temp_id,cc.trans_date;

create table returningOrders1 as
select b.customer_id,date_format(b.transdate,'yyyy-MM-dd') as transdate,temp_id,sum(b.profit) profit, sum(if(cast(a.rank as int) &lt;&gt; 1,b.cum_profit,0)) as hist_profit-- ,sum(b.hist_profit) as hist_profit
from order_analytics1 a
join adcopy_template${account} c on a.ad_id=c.ad_id
-- join ordered_cust b on b.start_date= date_add(a.transdate, 1-day(a.transdate)+1)
right join trans_profile_pivot${account} b on a.customer_id = b.customer_id and date_format(a.trans_date,'yyyy-MM-dd') = date_format(b.transdate,'yyyy-MM-dd')
where cast(a.rank  as int)!= 1  
group by b.customer_id,b.transdate,temp_id;


CREATE TABLE ordered_cust2 as 
select * from
(SELECT b.customer_id,b.start_date, a.temp_id,
   sum(a.hist_profit)  as hist_profit,
   sum(a.profit) as hist_profit2,
  if(a.customer_id is not null ,'Yes','No') as ordered_flag
FROM 
  -- (select customer_id, transdate, cum_profit from trans_profile_pivot2 where order_rank != 1) a
returningOrders1 a 
 right JOIN retention_input${account} b ON a.customer_id = b.customer_id
  AND b.start_date = date_add(a.transdate, 1-day(a.transdate)+1)
GROUP BY b.customer_id,b.start_date,if(a.customer_id is not null ,'Yes','No')
,a.temp_id) b ;


create table orderedCust_deltaltv1 as
select a.start_date as start_date, a.temp_id,b.customer_id, ordered_flag,
ltv as expectedprofit, --  sum(expectedprofit) as expectedprofit, 
hist_profit, 
-- sum(hist_profit) as hist_profit,
lag(hist_profit, 1) over (partition by b.customer_id order by b.start_date asc) as prev_hist_profit, 
-- sum(lag(expectedprofit, 1) over (PARTITION BY b.customer_id, a.channel order by b.start_dateasc)) as prev_expectedprofit,
lag(ltv, 1) over (PARTITION BY b.customer_id order by b.start_date asc) as prev_expectedprofit,
is_active as cur_status, 
lag(is_active, 1) over (partition by b.customer_id order by b.start_date asc) as prev_status
from ordered_cust2 a
right join retention_input${account} b on a.customer_id = b.customer_id and a.start_date = b.start_date;

create table retentionsummary_month as
SELECT year(start_date) year_INT,
   month(start_date)  month_of_year, temp_id,
   COUNT(*) - SUM(IF(prev_status = 0, 1, 0)) AS numCustLost,
   COUNT(DISTINCT customer_id) AS numUniqueCustomers,
   COUNT(DISTINCT CASE
           WHEN cur_status = 0  THEN customer_id
       END) as numCustInactive,
   COUNT(DISTINCT CASE
           WHEN cur_status = 1 THEN customer_id
       END) as numCustActive,
       count( Distinct case
         when prev_status=0 and cur_status=1 and temp_id is not null then customer_id end) as numCustReactive,
sum( -- Ordered : turns active from inactive
case when prev_status  = 0 and cur_status = 1 and lower(ordered_flag) = "yes" then expectedprofit - prev_expectedprofit
else 0
   end) as regain,
sum( -- Ordered : turns inactive from active
case when prev_status  =  1 and cur_status = 0 and lower(ordered_flag)="yes" then prev_hist_profit - prev_expectedprofit
else 0
   end) as lostPot, 
sum(case -- Unordered: Active remains active
when prev_status=1 and cur_status =1 and lower(ordered_flag) ="no" then expectedprofit - prev_expectedprofit 
   else 0
   end) as delta_ltv
FROM orderedCust_deltaltv1 
where temp_id is not null
GROUP BY year(start_date),month(start_date), temp_id;

</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>hadoop</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>464</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>RetentionPush</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}/PushRetTemplateToMongo.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
        <parameter>
          <name>HOST</name>
          <stream_name/>
          <value/>
        </parameter>
        <parameter>
          <name>account</name>
          <stream_name/>
          <value/>
        </parameter>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>CPO</name>
      <description/>
      <type>SQL</type>
      <sql>create table cost1 as 
select a.temp_id, a.calendar_date,(acqcpo+coalesce(cpo,0)) acqCpo, (retcpo+coalesce(cpo,0)) retCpo from
(select a.temp_id, a.calendar_date, acqcost/if(acqOrder=0,1,acqOrder) as acqCpo,retcost/if(retOrder=0,1,retOrder) as retcpo from
(select a.temp_id, b.calendar_date,sum(b.mktgspend) as mktgspend,sum(acqOrder) acqOrder,sum(retOrder) retOrder,sum((b.mktgspend/(acqOrder+retOrder))*acqOrder) acqcost,sum((b.mktgspend/(acqOrder+retOrder))*retOrder) retcost from
(select temp_id,trans_date,sum(if(rank=1,1,0)) as acqOrder,sum(if(rank=1,0,1)) as retOrder from order_analytics1 a
join adcopy_template${account} b on a.ad_id=b.ad_id
where campaign_id IS NOT NULL and campaign_id &lt;&gt; '(not set)'
group by temp_id,trans_date) a  
JOIN channelkpi2 b on a.temp_id=b.temp_id and a.trans_date=b.calendar_date
group by a.temp_id, b.calendar_date) a) a
left join (select a.temp_id,a.calendar_date, sum(ext_cost) as ext_cost, sum(ext_cost/(acqorder+retorder)) as cpo from 
(select temp_id,calendar_date,sum(ext_cost) ext_cost from 
(select a.campaign_id,a.adgroup_id,a.adcopy_id,calendar_date, sum(mktgspend) as ext_cost from channelkpi a
left join order_analytics1 b on a.campaign_id=b.campaign_id and a.calendar_date=b.trans_date
where b.campaign_id is null
group by a.campaign_id,a.adgroup_id,a.adcopy_id,calendar_date) a
join adcopy_template${account} b on a.adcopy_id=b.ad_id
where ext_cost >0
group by temp_id,calendar_date) a
join (select temp_id,trans_date,sum(if(rank=1,1,0)) as acqOrder,sum(if(rank=1,0,1)) as retOrder from order_analytics1 a
join adcopy_template${account} b on a.ad_id=b.ad_id
group by temp_id,trans_date) b on a.temp_id=b.temp_id and a.calendar_date=b.trans_date
group by a.temp_id,a.calendar_date) b on a.temp_id=b.temp_id and a.calendar_date=b.calendar_date;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>hadoop</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>592</xloc>
      <yloc>160</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>OrderAnalyticsBase</from>
      <to>Acq</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL 2</from>
      <to>OrderAnalyticsBase</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>SQL 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>AcquisitionPush</from>
      <to>RetentionPush</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>RetentionPush</from>
      <to>Success</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Ret</from>
      <to>CPO</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>CPO</from>
      <to>AcquisitionPush</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Acq</from>
      <to>Ret</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.NamedClusters</name>
      <attribute>
        <key>NamedCluster</key>
        <value>{"namespace":"NamedClusters","id":"NamedCluster","name":"NamedCluster","description":"A NamedCluster","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"NamedClusters","type":"NamedCluster"}</name>
      <attribute>
        <key>hadoop</key>
        <value>{"children":[{"children":[],"id":"hdfsPassword","value":null},{"children":[],"id":"oozieUrl","value":"http://node-01.algo:8080/oozie"},{"children":[],"id":"mapr","value":"N"},{"children":[],"id":"useGateway","value":"N"},{"children":[],"id":"lastModifiedDate","value":"1500013133689"},{"children":[],"id":"jobTrackerHost","value":"node-01.algo"},{"children":[],"id":"zooKeeperHost","value":"node-01.algo"},{"children":[],"id":"shimIdentifier","value":null},{"children":[],"id":"gatewayUrl","value":null},{"children":[],"id":"jobTrackerPort","value":"8050"},{"children":[],"id":"zooKeeperPort","value":"2181"},{"children":[],"id":"name","value":"hadoop"},{"children":[],"id":"hdfsPort","value":"8020"},{"children":[],"id":"hdfsUsername","value":"TD054"},{"children":[],"id":"gatewayPassword","value":null},{"children":[],"id":"kafkaBootstrapServers","value":null},{"children":[],"id":"storageScheme","value":"hdfs"},{"children":[],"id":"hdfsHost","value":"node-01.algo"},{"children":[],"id":"gatewayUsername","value":null}],"id":"hadoop","value":null,"name":"hadoop","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>
